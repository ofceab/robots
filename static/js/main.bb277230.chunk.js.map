{"version":3,"sources":["components/card/card.component.tsx","components/card-list/card-list.component.tsx","components/loader/loader.component.tsx","components/loader-box/loader-box.component.tsx","components/search-box/search-box.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","className","src","data","image","alt","title","substring","body","CardList","itemsList","map","item","Loader","width","height","viewBox","xmlns","fill","fill-rule","transform","stroke","stroke-width","cx","cy","r","fill-opacity","attributeName","begin","dur","values","calcMode","repeatCount","LoaderBox","SearchBox","onChange","placeholder","type","App","postEndpoint","state","postData","filteredData","isLoading","formatData","response","id","userId","setState","onSearch","e","searchText","target","value","filter","includes","fetch","this","then","json","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb277230.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CardProps } from '../../interfaces/card.props';\r\nimport './card.styles.css';\r\n\r\nexport const Card =(props:CardProps)=>{\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={props.data.image} alt={props.data.title} className=\"card-image\" />\r\n            <div className=\"card-content\">\r\n            <h4>{props.data.title.substring(0,24)}</h4>\r\n            <p>{props.data.body}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { CardListProps } from '../../interfaces/card-list.props';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList=(props:CardListProps)=>{\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.itemsList.map((item)=><Card data={item} />)\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <svg width=\"58\" height=\"58\" viewBox=\"0 0 58 58\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <g fill=\"none\" fill-rule=\"evenodd\">\r\n                <g transform=\"translate(2 1)\" stroke=\"#FFF\" stroke-width=\"1.5\">\r\n                    <circle cx=\"42.601\" cy=\"11.462\" r=\"5\" fill-opacity=\"1\" fill=\"#fff\">\r\n                        <animate attributeName=\"fill-opacity\"\r\n                            begin=\"0s\" dur=\"1.3s\"\r\n                            values=\"1;0;0;0;0;0;0;0\" calcMode=\"linear\"\r\n                            repeatCount=\"indefinite\" />\r\n                    </circle>\r\n                    <circle cx=\"49.063\" cy=\"27.063\" r=\"5\" fill-opacity=\"0\" fill=\"#fff\">\r\n                        <animate attributeName=\"fill-opacity\"\r\n                            begin=\"0s\" dur=\"1.3s\"\r\n                            values=\"0;1;0;0;0;0;0;0\" calcMode=\"linear\"\r\n                            repeatCount=\"indefinite\" />\r\n                    </circle>\r\n                    <circle cx=\"42.601\" cy=\"42.663\" r=\"5\" fill-opacity=\"0\" fill=\"#fff\">\r\n                        <animate attributeName=\"fill-opacity\"\r\n                            begin=\"0s\" dur=\"1.3s\"\r\n                            values=\"0;0;1;0;0;0;0;0\" calcMode=\"linear\"\r\n                            repeatCount=\"indefinite\" />\r\n                    </circle>\r\n                    <circle cx=\"27\" cy=\"49.125\" r=\"5\" fill-opacity=\"0\" fill=\"#fff\">\r\n                        <animate attributeName=\"fill-opacity\"\r\n                            begin=\"0s\" dur=\"1.3s\"\r\n                            values=\"0;0;0;1;0;0;0;0\" calcMode=\"linear\"\r\n                            repeatCount=\"indefinite\" />\r\n                    </circle>\r\n                    <circle cx=\"11.399\" cy=\"42.663\" r=\"5\" fill-opacity=\"0\" fill=\"#fff\">\r\n                        <animate attributeName=\"fill-opacity\"\r\n                            begin=\"0s\" dur=\"1.3s\"\r\n                            values=\"0;0;0;0;1;0;0;0\" calcMode=\"linear\"\r\n                            repeatCount=\"indefinite\" />\r\n                    </circle>\r\n                    <circle cx=\"4.938\" cy=\"27.063\" r=\"5\" fill-opacity=\"0\" fill=\"#fff\">\r\n                        <animate attributeName=\"fill-opacity\"\r\n                            begin=\"0s\" dur=\"1.3s\"\r\n                            values=\"0;0;0;0;0;1;0;0\" calcMode=\"linear\"\r\n                            repeatCount=\"indefinite\" />\r\n                    </circle>\r\n                    <circle cx=\"11.399\" cy=\"11.462\" r=\"5\" fill-opacity=\"0\" fill=\"#fff\">\r\n                        <animate attributeName=\"fill-opacity\"\r\n                            begin=\"0s\" dur=\"1.3s\"\r\n                            values=\"0;0;0;0;0;0;1;0\" calcMode=\"linear\"\r\n                            repeatCount=\"indefinite\" />\r\n                    </circle>\r\n                    <circle cx=\"27\" cy=\"5\" r=\"5\" fill-opacity=\"0\" fill=\"#fff\">\r\n                        <animate attributeName=\"fill-opacity\"\r\n                            begin=\"0s\" dur=\"1.3s\"\r\n                            values=\"0;0;0;0;0;0;0;1\" calcMode=\"linear\"\r\n                            repeatCount=\"indefinite\" />\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    );\r\n}","import React from 'react';\r\nimport { Loader } from '../loader/loader.component';\r\nimport './loader-box.styles.css';\r\n\r\nexport const LoaderBox=()=>{\r\n    return (\r\n        <div className=\"loader-box\">\r\n            <Loader />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { SearchBoxProps } from '../../interfaces/search-box.props';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox=(props:SearchBoxProps)=>{\r\n    return (\r\n        <div className=\"search-box-parent\">\r\n            <input className=\"search-box\" onChange={props.onChange} placeholder=\"Search your robot ðŸ˜„\" type=\"search\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { LoaderBox } from './components/loader-box/loader-box.component';\nimport { Loader } from './components/loader/loader.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { PostEndpointResponse } from './interfaces/post-endpoint.response';\nimport { StateItemFormat } from './interfaces/state.format';\n\nexport default class App extends React.Component {\n  private postEndpoint = \"https://jsonplaceholder.typicode.com/posts\";\n\n  state: { postData: Array<StateItemFormat>,filteredData: Array<StateItemFormat>,isLoading:boolean } = {\n     postData: [],\n     filteredData:[],\n     isLoading:true, \n    };\n\n  componentDidMount() {\n    fetch(this.postEndpoint)\n      .then(response => response.json())\n      .then(this.formatData)\n  }\n\n\n  //Data formatter\n  formatData = (response: PostEndpointResponse[]) => {\n    const data: StateItemFormat[] = response.map((item) => {\n      const dataItem: StateItemFormat = {\n        body: item.body,\n        id: item.id,\n        image: `https://robohash.org/${item.title}.png&size=200x300`,\n        title: item.title,\n        userId: item.userId\n      }\n      return dataItem;\n    });\n    this.setState({\n      postData: data,\n      filteredData:data,\n      isLoading:false,\n    });\n  }\n\n  onSearch=(e:React.ChangeEvent<HTMLInputElement>)=>{\n    const searchText=e.target.value;\n    const filteredData=this.state.postData.filter((data)=>data.title.includes(searchText));\n    this.setState({\n      filteredData\n    })\n  }\n\n\n  //Rendering the ui\n  render() {\n    return (\n      this.state.isLoading?<LoaderBox />:\n      <div>\n        <SearchBox onChange={this.onSearch} />\n      <CardList itemsList={this.state.filteredData} />\n      </div>\n    );\n  }\n\n\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}